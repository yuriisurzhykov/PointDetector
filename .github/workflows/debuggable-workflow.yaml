name: Debuggable Workflow

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Android project
        uses: actions/checkout@v5

      - name: Read version properties
        uses: madhead/read-java-properties@latest
        id: versions
        with:
          file: app/version.properties
          all: true

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: gradle

      - name: Setup Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Configure Keystore
        run: |
          echo "$ANDROID_KEYSTORE_FILE" > app/keystore.jks.b64
          base64 -d -i app/keystore.jks.b64 > app/keystore.jks
          echo "storeFile=keystore.jks" >> app/signing.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> app/signing.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> app/signing.properties
          echo "::debug::storePassword=$KEYSTORE_STORE_PASSWORD"
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> app/signing.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew assembleDebug bundleDebug
        env:
          VERSION_CODE: ${{ github.run_number }}
          VERSION_NAME: ${{ github.ref_name }}

      - name: Print working directory
        run: pwd

      - name: Find all apk/aab
        run: find . -type f \( -name "*.apk" -o -name "*.aab" \) -print

      - name: Find APK files in the entire workspace
        id: find-apk-files
        run: |
          APK_PATH=$(find ${{ github.workspace }} -name "*.apk")
          APK_PATH_2=$(find . -type f \( -name "*.apk" \) -print)
          echo "apk_location=$APK_PATH" >> $GITHUB_OUTPUT
          echo "apk_local_location=$APK_PATH_2" >> $GITHUB_OUTPUT

      - name: Access APK Location path
        run: |
          echo "Found APK at: ${{ steps.find-apk-files.outputs.apk_location }}"
          echo "Another path: ${{ steps.find-apk-files.outputs.apk_local_location }}"

      - name: Upload AAB/APK file to Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            ${{ steps.find-apk-files.outputs.apk_location }}
            ${{ steps.find-apk-files.outputs.apk_local_location }}
          name: App Release ${{ github.ref_name }}
